{% extends "layout.html.twig" %}

{% block title %}Products - Price Grabber{% endblock %}

{% block content %}
<div class="space-y-6">
    <div class="card p-6">
        <div class="flex items-center justify-between mb-6">
            <h2 class="text-2xl font-semibold">Product Overview</h2>
            <form method="GET" class="inline">
                {# Preserve all current filters as hidden inputs #}
                {% if search %}
                    <input type="hidden" name="search" value="{{ search }}" />
                {% endif %}
                {% if parent_filter %}
                    <input type="hidden" name="parent_filter" value="{{ parent_filter }}" />
                {% endif %}
                {% for priority in selected_priorities %}
                    <input type="hidden" name="priorities[]" value="{{ priority }}" />
                {% endfor %}
                {% if per_page %}
                    <input type="hidden" name="per_page" value="{{ per_page }}" />
                {% endif %}
                {% for seller in selected_sellers %}
                    <input type="hidden" name="sellers[]" value="{{ seller }}" />
                {% endfor %}
                {% if page %}
                    <input type="hidden" name="page" value="{{ page }}" />
                {% endif %}
                <button type="submit" name="export" value="csv" class="btn bg-green-600 text-white hover:bg-green-700 px-4 py-2">
                    Export CSV
                </button>
            </form>
        </div>

        {# Filters #}
        <form method="GET" class="mb-6">
            <div class="flex flex-wrap gap-3 mb-3">
                <input
                    type="text"
                    name="search"
                    placeholder="Search products..."
                    value="{{ search }}"
                    class="input flex-1 min-w-[200px]"
                />

                {% if all_sellers is not empty %}
                    <div class="relative flex-1 min-w-[200px]">
                        <div class="relative">
                        {# Hidden inputs to store selected sellers #}
                        <div id="seller-inputs">
                            {% for seller in selected_sellers %}
                                <input type="hidden" name="sellers[]" value="{{ seller }}" class="seller-input" />
                            {% endfor %}
                        </div>

                        {# Combobox button #}
                        <button
                            type="button"
                            id="seller-combobox-btn"
                            class="input w-full text-left flex items-center justify-between"
                        >
                            <span id="seller-combobox-text" class="{% if selected_sellers is empty %}text-muted-foreground{% endif %}">
                                {% if selected_sellers is empty %}
                                    Select sellers...
                                {% else %}
                                    {{ selected_sellers|length }} seller(s) selected
                                {% endif %}
                            </span>
                            <svg class="h-4 w-4 opacity-50" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </button>

                        {# Combobox dropdown #}
                        <div
                            id="seller-combobox-dropdown"
                            class="hidden absolute z-50 mt-1 w-full rounded-md border bg-white shadow-lg"
                        >
                            <div class="p-2">
                                {# Search input #}
                                <input
                                    type="text"
                                    id="seller-search"
                                    placeholder="Search sellers..."
                                    class="input w-full mb-2"
                                />

                                {# Select All / None buttons #}
                                <div class="flex gap-2 mb-2">
                                    <button
                                        type="button"
                                        id="select-all-sellers"
                                        class="btn btn-outline text-xs flex-1"
                                    >
                                        Select All
                                    </button>
                                    <button
                                        type="button"
                                        id="select-none-sellers"
                                        class="btn btn-outline text-xs flex-1"
                                    >
                                        Select None
                                    </button>
                                </div>

                                {# Seller list #}
                                <div class="max-h-64 overflow-y-auto border rounded p-2">
                                    {% for seller_row in all_sellers %}
                                        {% set seller = seller_row.seller %}
                                        <label class="flex items-center py-2 px-2 hover:bg-muted rounded cursor-pointer seller-option">
                                            <input
                                                type="checkbox"
                                                value="{{ seller }}"
                                                class="h-4 w-4 rounded border-gray-300 seller-checkbox"
                                                {% if seller in selected_sellers %}checked{% endif %}
                                                data-seller="{{ seller }}"
                                            />
                                            <span class="ml-2 text-sm seller-name">{{ seller }}</span>
                                        </label>
                                    {% endfor %}
                                </div>
                            </div>
                        </div>
                    </div>
                    </div>
                {% endif %}

                <select name="parent_filter" class="select w-auto">
                    <option value="">All Products</option>
                    <option value="parents_only" {% if parent_filter == 'parents_only' %}selected{% endif %}>
                        Parent Products Only
                    </option>
                </select>

                {% if all_priorities is not empty %}
                    <div class="relative flex-1 min-w-[200px]">
                        <div class="relative">
                        {# Hidden inputs to store selected priorities #}
                        <div id="priority-inputs">
                            {% for priority in selected_priorities %}
                                <input type="hidden" name="priorities[]" value="{{ priority }}" class="priority-input" />
                            {% endfor %}
                        </div>

                        {# Combobox button #}
                        <button
                            type="button"
                            id="priority-combobox-btn"
                            class="input w-full text-left flex items-center justify-between"
                        >
                            <span id="priority-combobox-text" class="{% if selected_priorities is empty %}text-muted-foreground{% endif %}">
                                {% if selected_priorities is empty %}
                                    Select priorities...
                                {% else %}
                                    {{ selected_priorities|length }} priorit{% if selected_priorities|length == 1 %}y{% else %}ies{% endif %} selected
                                {% endif %}
                            </span>
                            <svg class="h-4 w-4 opacity-50" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </button>

                        {# Combobox dropdown #}
                        <div
                            id="priority-combobox-dropdown"
                            class="hidden absolute z-50 mt-1 w-full rounded-md border bg-white shadow-lg"
                        >
                            <div class="p-2">
                                {# Search input #}
                                <input
                                    type="text"
                                    id="priority-search"
                                    placeholder="Search priorities..."
                                    class="input w-full mb-2"
                                />

                                {# Select All / None buttons #}
                                <div class="flex gap-2 mb-2">
                                    <button
                                        type="button"
                                        id="select-all-priorities"
                                        class="btn btn-outline text-xs flex-1"
                                    >
                                        Select All
                                    </button>
                                    <button
                                        type="button"
                                        id="select-none-priorities"
                                        class="btn btn-outline text-xs flex-1"
                                    >
                                        Select None
                                    </button>
                                </div>

                                {# Priority list #}
                                <div class="max-h-64 overflow-y-auto border rounded p-2">
                                    {% for priority_row in all_priorities %}
                                        {% set priority = priority_row.product_priority %}
                                        <label class="flex items-center py-2 px-2 hover:bg-muted rounded cursor-pointer priority-option">
                                            <input
                                                type="checkbox"
                                                value="{{ priority }}"
                                                class="h-4 w-4 rounded border-gray-300 priority-checkbox"
                                                {% if priority in selected_priorities %}checked{% endif %}
                                                data-priority="{{ priority }}"
                                            />
                                            <span class="ml-2 text-sm priority-name">{{ priority|capitalize }}</span>
                                        </label>
                                    {% endfor %}
                                </div>
                            </div>
                        </div>
                    </div>
                    </div>
                {% endif %}

                <select name="per_page" class="select w-auto">
                    <option value="25" {% if per_page == 25 %}selected{% endif %}>25 per page</option>
                    <option value="50" {% if per_page == 50 %}selected{% endif %}>50 per page</option>
                    <option value="100" {% if per_page == 100 %}selected{% endif %}>100 per page</option>
                </select>

                <button type="submit" class="btn btn-primary">
                    Filter
                </button>

                <a href="products.php" class="btn btn-outline">
                    Clear
                </a>
            </div>
        </form>

        {# JavaScript for combobox functionality #}
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                const comboboxBtn = document.getElementById('seller-combobox-btn');
                const comboboxDropdown = document.getElementById('seller-combobox-dropdown');
                const comboboxText = document.getElementById('seller-combobox-text');
                const searchInput = document.getElementById('seller-search');
                const selectAllBtn = document.getElementById('select-all-sellers');
                const selectNoneBtn = document.getElementById('select-none-sellers');
                const sellerInputs = document.getElementById('seller-inputs');
                const sellerCheckboxes = document.querySelectorAll('.seller-checkbox');
                const sellerOptions = document.querySelectorAll('.seller-option');

                // Toggle dropdown
                comboboxBtn.addEventListener('click', function(e) {
                    e.stopPropagation();
                    comboboxDropdown.classList.toggle('hidden');
                    if (!comboboxDropdown.classList.contains('hidden')) {
                        searchInput.focus();
                    }
                });

                // Close dropdown when clicking outside
                document.addEventListener('click', function(e) {
                    if (!comboboxBtn.contains(e.target) && !comboboxDropdown.contains(e.target)) {
                        comboboxDropdown.classList.add('hidden');
                    }
                });

                // Update hidden inputs and button text
                function updateSelection() {
                    const selected = Array.from(sellerCheckboxes)
                        .filter(cb => cb.checked)
                        .map(cb => cb.value);

                    // Update hidden inputs
                    sellerInputs.innerHTML = selected
                        .map(seller => `<input type="hidden" name="sellers[]" value="${seller}" class="seller-input" />`)
                        .join('');

                    // Update button text
                    if (selected.length === 0) {
                        comboboxText.textContent = 'Select sellers...';
                        comboboxText.classList.add('text-muted-foreground');
                    } else {
                        comboboxText.textContent = `${selected.length} seller(s) selected`;
                        comboboxText.classList.remove('text-muted-foreground');
                    }
                }

                // Handle checkbox changes
                sellerCheckboxes.forEach(function(checkbox) {
                    checkbox.addEventListener('change', updateSelection);
                });

                // Select All
                selectAllBtn.addEventListener('click', function() {
                    sellerCheckboxes.forEach(function(cb) {
                        if (!cb.closest('.seller-option').classList.contains('hidden')) {
                            cb.checked = true;
                        }
                    });
                    updateSelection();
                });

                // Select None
                selectNoneBtn.addEventListener('click', function() {
                    sellerCheckboxes.forEach(function(cb) {
                        cb.checked = false;
                    });
                    updateSelection();
                });

                // Search functionality
                searchInput.addEventListener('input', function() {
                    const searchTerm = this.value.toLowerCase();
                    sellerOptions.forEach(function(option) {
                        const sellerName = option.querySelector('.seller-name').textContent.toLowerCase();
                        if (sellerName.includes(searchTerm)) {
                            option.classList.remove('hidden');
                        } else {
                            option.classList.add('hidden');
                        }
                    });
                });

                // Priority combobox functionality
                const priorityComboboxBtn = document.getElementById('priority-combobox-btn');
                const priorityComboboxDropdown = document.getElementById('priority-combobox-dropdown');
                const priorityComboboxText = document.getElementById('priority-combobox-text');
                const prioritySearchInput = document.getElementById('priority-search');
                const selectAllPrioritiesBtn = document.getElementById('select-all-priorities');
                const selectNonePrioritiesBtn = document.getElementById('select-none-priorities');
                const priorityInputs = document.getElementById('priority-inputs');
                const priorityCheckboxes = document.querySelectorAll('.priority-checkbox');
                const priorityOptions = document.querySelectorAll('.priority-option');

                if (priorityComboboxBtn) {
                    // Toggle dropdown
                    priorityComboboxBtn.addEventListener('click', function(e) {
                        e.stopPropagation();
                        priorityComboboxDropdown.classList.toggle('hidden');
                        if (!priorityComboboxDropdown.classList.contains('hidden')) {
                            prioritySearchInput.focus();
                        }
                    });

                    // Close dropdown when clicking outside
                    document.addEventListener('click', function(e) {
                        if (!priorityComboboxBtn.contains(e.target) && !priorityComboboxDropdown.contains(e.target)) {
                            priorityComboboxDropdown.classList.add('hidden');
                        }
                    });

                    // Update hidden inputs and button text
                    function updatePrioritySelection() {
                        const selected = Array.from(priorityCheckboxes)
                            .filter(cb => cb.checked)
                            .map(cb => cb.value);

                        // Update hidden inputs
                        priorityInputs.innerHTML = selected
                            .map(priority => `<input type="hidden" name="priorities[]" value="${priority}" class="priority-input" />`)
                            .join('');

                        // Update button text
                        if (selected.length === 0) {
                            priorityComboboxText.textContent = 'Select priorities...';
                            priorityComboboxText.classList.add('text-muted-foreground');
                        } else {
                            const label = selected.length === 1 ? 'priority' : 'priorities';
                            priorityComboboxText.textContent = `${selected.length} ${label} selected`;
                            priorityComboboxText.classList.remove('text-muted-foreground');
                        }
                    }

                    // Handle checkbox changes
                    priorityCheckboxes.forEach(function(checkbox) {
                        checkbox.addEventListener('change', updatePrioritySelection);
                    });

                    // Select All
                    selectAllPrioritiesBtn.addEventListener('click', function() {
                        priorityCheckboxes.forEach(function(cb) {
                            if (!cb.closest('.priority-option').classList.contains('hidden')) {
                                cb.checked = true;
                            }
                        });
                        updatePrioritySelection();
                    });

                    // Select None
                    selectNonePrioritiesBtn.addEventListener('click', function() {
                        priorityCheckboxes.forEach(function(cb) {
                            cb.checked = false;
                        });
                        updatePrioritySelection();
                    });

                    // Search functionality
                    prioritySearchInput.addEventListener('input', function() {
                        const searchTerm = this.value.toLowerCase();
                        priorityOptions.forEach(function(option) {
                            const priorityName = option.querySelector('.priority-name').textContent.toLowerCase();
                            if (priorityName.includes(searchTerm)) {
                                option.classList.remove('hidden');
                            } else {
                                option.classList.add('hidden');
                            }
                        });
                    });
                }
            });
        </script>

        {# Products Table #}
        {% if products is empty %}
            <div class="text-center py-12">
                <p class="text-muted-foreground mb-4">
                    No products found.
                </p>
                <a href="bulk-import.php" class="btn btn-primary">
                    Import Products
                </a>
            </div>
        {% else %}
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead>
                        <tr class="border-b">
                            <th class="text-left py-3 px-4 font-semibold text-sm text-muted-foreground">ID</th>
                            <th class="text-left py-3 px-4 font-semibold text-sm text-muted-foreground">Product</th>
                            <th class="text-left py-3 px-4 font-semibold text-sm text-muted-foreground">Priority</th>
                            <th class="text-left py-3 px-4 font-semibold text-sm text-muted-foreground">Latest Price</th>
                            <th class="text-left py-3 px-4 font-semibold text-sm text-muted-foreground">Last Checked</th>
                            <th class="text-left py-3 px-4 font-semibold text-sm text-muted-foreground">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for product in products %}
                            <tr class="border-b hover:bg-muted/50 transition-colors">
                                <td class="py-3 px-4 text-sm">{{ product.product_id }}</td>
                                <td class="py-3 px-4">
                                    <a href="{{ product.url }}" target="_blank" class="font-medium text-blue-600 hover:underline">
                                        {{ product.name|default('Product #' ~ product.product_id) }}
                                    </a>
                                    {% if product.parent_id %}
                                        <div class="text-xs text-muted-foreground mt-1">
                                            Parent: {{ product.parent_name }}
                                        </div>
                                    {% elseif product.child_count > 0 %}
                                        <div class="text-xs text-muted-foreground mt-1">
                                            {{ product.child_count }} variant(s)
                                        </div>
                                    {% endif %}
                                </td>
                                <td class="py-3 px-4">
                                    {% if product.product_priority == 'white' %}
                                        <span class="badge border-transparent bg-green-600 text-white">
                                            {{ product.product_priority|capitalize }}
                                        </span>
                                    {% elseif product.product_priority == 'grey' %}
                                        <span class="badge border-transparent bg-orange-500 text-white">
                                            {{ product.product_priority|capitalize }}
                                        </span>
                                    {% elseif product.product_priority == 'black' %}
                                        <span class="badge badge-danger">
                                            {{ product.product_priority|capitalize }}
                                        </span>
                                    {% else %}
                                        <span class="badge badge-outline">
                                            {{ product.product_priority|capitalize }}
                                        </span>
                                    {% endif %}
                                </td>
                                <td class="py-3 px-4">
                                    {% if product.latest_price %}
                                        <span class="font-semibold text-green-600">
                                            {{ product.latest_price.currency }}
                                            {{ product.latest_price.price|number_format(2) }}
                                        </span>
                                        {% if product.latest_price.seller %}
                                            <div class="text-xs text-muted-foreground">
                                                {{ product.latest_price.seller }}
                                            </div>
                                        {% endif %}
                                    {% else %}
                                        <span class="text-muted-foreground">No data</span>
                                    {% endif %}
                                </td>
                                <td class="py-3 px-4 text-sm">
                                    {% if product.latest_price %}
                                        {{ product.latest_price.fetched_at|date('Y-m-d H:i') }}
                                    {% else %}
                                        <span class="text-muted-foreground">Never</span>
                                    {% endif %}
                                </td>
                                <td class="py-3 px-4">
                                    <a href="product-detail.php?id={{ product.id }}" class="text-sm text-blue-600 hover:underline">
                                        View Details
                                    </a>
                                </td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>

            {# Pagination and results count #}
            <div class="mt-6 flex flex-col md:flex-row items-center justify-between gap-4">
                <div class="text-sm text-muted-foreground">
                    Showing {{ ((page - 1) * per_page) + 1 }} to {{ min(page * per_page, total_products) }} of {{ total_products }} product(s)
                </div>

                {% if total_pages > 1 %}
                    <div class="flex gap-2">
                        {# Previous button #}
                        {% if page > 1 %}
                            <a href="?page={{ page - 1 }}&per_page={{ per_page }}{% if search %}&search={{ search }}{% endif %}{% if parent_filter %}&parent_filter={{ parent_filter }}{% endif %}{% for priority in selected_priorities %}&priorities[]={{ priority }}{% endfor %}{% for seller in selected_sellers %}&sellers[]={{ seller }}{% endfor %}"
                               class="btn btn-outline">
                                Previous
                            </a>
                        {% endif %}

                        {# Page numbers #}
                        {% set start_page = max(1, page - 2) %}
                        {% set end_page = min(total_pages, page + 2) %}

                        {% if start_page > 1 %}
                            <a href="?page=1&per_page={{ per_page }}{% if search %}&search={{ search }}{% endif %}{% if parent_filter %}&parent_filter={{ parent_filter }}{% endif %}{% for priority in selected_priorities %}&priorities[]={{ priority }}{% endfor %}{% for seller in selected_sellers %}&sellers[]={{ seller }}{% endfor %}"
                               class="btn btn-outline">
                                1
                            </a>
                            {% if start_page > 2 %}
                                <span class="px-3 py-2">...</span>
                            {% endif %}
                        {% endif %}

                        {% for p in start_page..end_page %}
                            <a href="?page={{ p }}&per_page={{ per_page }}{% if search %}&search={{ search }}{% endif %}{% if parent_filter %}&parent_filter={{ parent_filter }}{% endif %}{% for priority in selected_priorities %}&priorities[]={{ priority }}{% endfor %}{% for seller in selected_sellers %}&sellers[]={{ seller }}{% endfor %}"
                               class="btn {% if p == page %}btn-primary{% else %}btn-outline{% endif %}">
                                {{ p }}
                            </a>
                        {% endfor %}

                        {% if end_page < total_pages %}
                            {% if end_page < total_pages - 1 %}
                                <span class="px-3 py-2">...</span>
                            {% endif %}
                            <a href="?page={{ total_pages }}&per_page={{ per_page }}{% if search %}&search={{ search }}{% endif %}{% if parent_filter %}&parent_filter={{ parent_filter }}{% endif %}{% for priority in selected_priorities %}&priorities[]={{ priority }}{% endfor %}{% for seller in selected_sellers %}&sellers[]={{ seller }}{% endfor %}"
                               class="btn btn-outline">
                                {{ total_pages }}
                            </a>
                        {% endif %}

                        {# Next button #}
                        {% if page < total_pages %}
                            <a href="?page={{ page + 1 }}&per_page={{ per_page }}{% if search %}&search={{ search }}{% endif %}{% if parent_filter %}&parent_filter={{ parent_filter }}{% endif %}{% for priority in selected_priorities %}&priorities[]={{ priority }}{% endfor %}{% for seller in selected_sellers %}&sellers[]={{ seller }}{% endfor %}"
                               class="btn btn-outline">
                                Next
                            </a>
                        {% endif %}
                    </div>
                {% endif %}
            </div>
        {% endif %}
    </div>
</div>
{% endblock %}
